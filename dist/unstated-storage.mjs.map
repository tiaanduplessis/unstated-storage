{"version":3,"file":"unstated-storage.mjs","sources":["../src/index.js"],"sourcesContent":["import setImmediate from \"set-immediate-shim\";\nimport { Container } from \"unstated\";\n\n// https://gist.github.com/Contra/6368485\nvar isStorageAvailable = function (storage) {\n    if (typeof storage == 'undefined') return false;\n    try { // hack for safari incognito\n      storage.setItem(\"storage\", \"\");\n      storage.getItem(\"storage\");\n      storage.removeItem(\"storage\");\n      return true;\n    }\n    catch (err) {\n      return false;\n    }\n  };\n\nexport class StoredContainer extends Container {\n  constructor() {\n    super();\n\n    const init = () => {\n\n        const { key, version, storage } = this.store;\n\n        if (!isStorageAvailable(storage)) {\n          throw new Error(\"unstated-storage: Invalid storage provided\");\n        }\n    \n        if (!key || typeof key !== \"string\") {\n          throw new Error(\"unstated-storage: Invalid key provided\");\n        }\n    \n        const defaultStorage = { _version: version };\n        let storageState = storage.getItem(key);\n\n        if (storageState !== null) {\n          storageState = JSON.parse(storageState);\n    \n          // If version isn't used we just update state, otherwise we\n          // check for a match\n          if (version && storageState._version) {\n            if (storageState._version === version) {\n              this.setState(storageState);\n            } else {\n              this.setState(defaultStorage);\n            }\n          } else {\n            this.setState(storageState); \n          }\n        } else {\n          this.setState(defaultStorage);\n        }\n    \n        this.subscribe(() => {\n          storage.setItem(key, JSON.stringify(this.state))\n        });\n    }\n\n    setImmediate(init)\n  }\n}"],"names":["isStorageAvailable","storage","setItem","getItem","removeItem","err","StoredContainer","constructor","setImmediate","this","store","Error","key","defaultStorage","_version","version","storageState","JSON","parse","setState","subscribe","stringify","state","Container"],"mappings":"uEAIA,IAAIA,EAAqB,SAAUC,WACT,IAAXA,EAAwB,OAAO,aAExCA,EAAQC,QAAQ,UAAW,IAC3BD,EAAQE,QAAQ,WAChBF,EAAQG,WAAW,YACZ,EAET,MAAOC,UACE,IAIAC,cACXC,qCAyCEC,mBApCsCC,EAAKC,0CAElCV,EAAmBC,SAChB,IAAIU,MAAM,kDAGbC,GAAsB,iBAARA,QACX,IAAID,MAAM,8CAGZE,EAAiB,CAAEC,SAAUC,GAC/BC,EAAef,EAAQE,QAAQS,GAEd,OAAjBI,GACFA,EAAeC,KAAKC,MAAMF,KAMjBG,SAFLJ,GAAWC,EAAaF,SACtBE,EAAaF,WAAaC,EACdC,EAEAH,EAGFG,MAGXG,SAASN,KAGXO,qBACHnB,EAAQC,QAAQU,EAAKK,KAAKI,UAAUZ,EAAKa,mGAtCdC"}